# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-03-16 15:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('production_manage', '0017_auto_20180110_1036'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertising',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_position', models.IntegerField(default=0, unique=True, verbose_name='广告位置')),
                ('ad_name', models.CharField(max_length=64, verbose_name='广告名称')),
                ('ad_image', models.ImageField(max_length=200, upload_to='advertising/')),
                ('ad_put_recent_on', models.DateField(verbose_name='广告最近上架时间')),
                ('ad_put_off', models.DateField(verbose_name='广告下架时间')),
                ('ad_put_operator', models.CharField(max_length=16, verbose_name='广告上架操作人')),
                ('ad_status', models.IntegerField(choices=[(1, '上架'), (2, '下架'), (3, '待上架')], help_text='广告上架状态')),
            ],
            options={
                'verbose_name': '广告管理',
                'verbose_name_plural': '广告管理',
            },
        ),
        migrations.CreateModel(
            name='DetailImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, help_text='是否可用')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='更新时间')),
                ('image', models.URLField(blank=True, default='', null=True, verbose_name='商品详情页')),
                ('weight', models.CharField(blank=True, default=0, max_length=5, null=True, verbose_name='权重')),
            ],
            options={
                'verbose_name': '详情页图片',
                'verbose_name_plural': '详情页图片',
            },
        ),
        migrations.CreateModel(
            name='GoodsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=16, unique=True, verbose_name='商品模块')),
                ('good_parents', models.ForeignKey(blank=True, max_length=16, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='goodmodel', to='goods.GoodsModel', verbose_name='所属父类')),
            ],
            options={
                'verbose_name': '商品模块配置',
                'verbose_name_plural': '商品模块配置',
            },
        ),
        migrations.CreateModel(
            name='IntroduceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, help_text='是否可用')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='更新时间')),
                ('image', models.URLField(blank=True, default='', null=True, verbose_name='产品介绍图片')),
            ],
            options={
                'verbose_name': '产品介绍图片',
                'verbose_name_plural': '产品介绍图片',
            },
        ),
        migrations.CreateModel(
            name='MultipleGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, help_text='是否可用')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='更新时间')),
                ('m_goods_sn', models.CharField(max_length=5, verbose_name='组合商品编码')),
                ('m_goods_name', models.CharField(max_length=64, verbose_name='组合商品名称')),
                ('m_goods_details_edit', models.TextField(default='', verbose_name='详情页文案')),
                ('m_goods_brief_introduction', models.TextField(max_length=1000, verbose_name='产品简介')),
                ('m_goods_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='商品价格')),
                ('m_goods_attribute', models.CharField(default='组合商品', max_length=16, null=True, verbose_name='商品属性')),
            ],
            options={
                'verbose_name': '组合商品管理',
                'verbose_name_plural': '组合商品管理',
            },
        ),
        migrations.CreateModel(
            name='Putaway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('putaway_recent_on_time', models.DateField(verbose_name='上架时间')),
                ('putaway_off_time', models.DateField(verbose_name='下架时间')),
                ('putaway_operator', models.CharField(blank=True, help_text='操作人', max_length=24)),
                ('putaway_on_status', models.IntegerField(blank=True, choices=[(1, '上架'), (2, '下架'), (3, '待上架')], null=True)),
                ('sell_status', models.SmallIntegerField(choices=[(1, '预售'), (2, '可售卖')], help_text='售卖状态', verbose_name='售卖状态')),
                ('recommend', models.SmallIntegerField(choices=[(1, '展示'), (2, '不展示')], default=2, verbose_name='是否首页展示')),
                ('put_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='上架价格')),
                ('m_up_goods', models.OneToOneField(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mputaway', to='goods.MultipleGoods', verbose_name='组合商品上架')),
            ],
            options={
                'verbose_name': '商品上架信息',
                'verbose_name_plural': '商品上架信息',
            },
        ),
        migrations.CreateModel(
            name='SingleGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, help_text='是否可用')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='更新时间')),
                ('goods_name', models.CharField(max_length=25, verbose_name='商品名称')),
                ('goods_sn', models.CharField(max_length=5, unique=True, verbose_name='商品编号')),
                ('goods_brief_introduction', models.TextField(max_length=100, verbose_name='产品简介')),
                ('goods_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='商品价格')),
                ('goods_text', models.TextField(default='', verbose_name='详情页文案')),
                ('goods_attribute', models.CharField(default='单件商品', max_length=16, null=True, verbose_name='商品属性')),
                ('goods_model', models.ForeignKey(blank=True, max_length=16, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='good_model', to='goods.GoodsModel', verbose_name='所属模块')),
                ('goods_selection', models.ManyToManyField(blank=True, related_name='single_goods', to='production_manage.SingleSelection', verbose_name='功能开关选项值')),
            ],
            options={
                'verbose_name': '单品管理',
                'verbose_name_plural': '单品管理',
            },
        ),
        migrations.CreateModel(
            name='SuccessCaseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enable', models.BooleanField(default=True, help_text='是否可用')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='更新时间')),
                ('image', models.URLField(blank=True, default='', null=True, verbose_name='成功案例图片')),
                ('m_su_goods', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='m_su_goods', to='goods.MultipleGoods', verbose_name='组合商品名称-su')),
                ('s_su_goods', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='success_img', to='goods.SingleGoods', verbose_name='单品名称-su')),
            ],
            options={
                'verbose_name': '成功案例图片',
                'verbose_name_plural': '成功案例图片',
            },
        ),
        migrations.CreateModel(
            name='TagClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_category', models.SmallIntegerField(choices=[(1, '行业'), (2, '客户案例'), (3, '产品类型'), (4, '客服规模'), (5, '咨询量/月'), (6, '机器人')], verbose_name='标签类别')),
                ('goods_tag', models.CharField(max_length=16, unique=True, verbose_name='商品标签')),
            ],
            options={
                'verbose_name': '标签模块配置',
                'verbose_name_plural': '标签模块配置',
            },
        ),
        migrations.AddField(
            model_name='singlegoods',
            name='goods_tag',
            field=models.ManyToManyField(blank=True, related_name='single_goods', to='goods.TagClass', verbose_name='商品标签'),
        ),
        migrations.AddField(
            model_name='singlegoods',
            name='parent',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childfunc', to='goods.SingleGoods', verbose_name='前置产品'),
        ),
        migrations.AddField(
            model_name='putaway',
            name='s_up_goods',
            field=models.OneToOneField(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sputaway', to='goods.SingleGoods', verbose_name='单件商品上架'),
        ),
        migrations.AddField(
            model_name='multiplegoods',
            name='m_goods_tag',
            field=models.ManyToManyField(related_name='multiple_tag', to='goods.TagClass'),
        ),
        migrations.AddField(
            model_name='multiplegoods',
            name='s_goods',
            field=models.ManyToManyField(blank=True, related_name='multiple_member', to='goods.SingleGoods', verbose_name='组合成员'),
        ),
        migrations.AddField(
            model_name='introduceimage',
            name='m_in_goods',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='m_in_goods', to='goods.MultipleGoods', verbose_name='组合商品名称-in'),
        ),
        migrations.AddField(
            model_name='introduceimage',
            name='s_in_goods',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='introduce_img', to='goods.SingleGoods', verbose_name='单品名称-in'),
        ),
        migrations.AddField(
            model_name='detailimage',
            name='m_de_goods',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='m_de_goods', to='goods.MultipleGoods', verbose_name='组合商品名称-detail'),
        ),
        migrations.AddField(
            model_name='detailimage',
            name='s_de_goods',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detail_img', to='goods.SingleGoods', verbose_name='单品名称-detail'),
        ),
    ]
